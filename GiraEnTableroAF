data Desplazamiento = Arriba | Abajo | Izquierda | Derecha deriving (Show, Eq)

type Conjunto a = [a]
type Camino = [Desplazamiento]
type Posicion = (Integer,Integer)
type Tablero a = [[a]]
type CampoMinado = Tablero Bool
type TableroAF = Tablero Desplazamiento

-- Gira un desplazamiento en lista de listas

-- Recibe un desplazamiento, y lo gira sentido horario:
girar :: Desplazamiento -> Desplazamiento
girar Arriba = Derecha
girar Derecha = Abajo
girar Abajo = Izquierda
girar Izquierda = Arriba

--Recibe un Camino y un valor "K". Gira el desplazamiento (en sentido horario) que est치 en K: 
giraEnCamino :: Camino -> Integer -> Camino
giraEnCamino camino 1 = ( girar (head camino) : tail camino )
giraEnCamino camino k = ( head camino : giraEnCamino (tail camino) (k-1) )

--Recibe un tableroAF y una posici칩n (i,j). Gira el desplazamiento de la posici칩n j (columna) que est치 en la lista i (fila)

giraEnTableroAF :: TableroAF -> Posicion -> TableroAF
giraEnTableroAF tablero (1, j) = ( giraEnCamino (head tablero) j : tail tablero )
giraEnTableroAF tablero (i, j) = ( head tablero : giraEnTableroAF (tail tablero) (i-1, j) )

